Folder Structure
Route configuration
Creating APIs
Different API method
Middleware
Route parameter
query paramenter
testing api using postman
securing api using jwt
documenting using swagger
cors
logging 
error handling



ProductController done
Get all Product  done
Add a Product  done
Get a Product   done
Filter product  done
Rate Product done 
add items to cart done 
get items of cart done 
remove items from cart done


UserController 
signup - email, name, password, typeofuser(customer, seller)  Done
signin - (email, password)  Done

modifying id - 
1. Counter collection (_id: "cartItemId, value:0)
2. While adding cart items, increment the counter and then use counter value as id to the cartitem document.

Read about operators
projection operators

{
_id:Cat1,
averagePrice: 50000}

2. Find the average rating of a product

db.products.aggregate([
    // 1. Create documents for ratings
    {
        $unwind:"$ratings"
    },
    // 2. Group rating per product and get average
    {
        $group:{
            _id: "$name",
            averageRating:{$avg:"$ratings.rating"}
        }
    }
])

db.products.aggregate([
    // 1. Project name of product, and countOfRating
    {
        $project:{name:1, countOfRating:{
            $cond:{if:{$isArray:"$ratings"}
            ,then:{$size:"$ratings"}, else:0}}}
    },
    {
        // Stage 2: Sort the collection
        $sort:{countOfRating:-1}
    },
    {
        // 3. Limit to just 1 item in result
        $limit:1
    }
])